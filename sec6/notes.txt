L44. Every commit has a unique hash that corrisponds to the contents of the commit among other things

L43. Head refers to the tip of a given branch
    a brabcg is a reffrence to a commit

L44. Viewing branches
    git branch : tells me what branch im on
    the one thats active has * next to it

L45. Creating Branches
    q tp exit git log
    git branch <branch-name> : creates a branch
    this makes the branch but does not switch to the branch for me
    git switch <branch-name> : switch to a branch

    I can not see the message in this file that is on the first-branch

    It does matter where I branch from

L47. Another Option: Git Checkout Vs. Git Switch
    git checkout <branch-name> : acts just like switch

L48. Must add and commit before switching
    we could stash them but that topic is covered in a few sections
    when switching branches, sometimes if I have unstaged changes, they will come with me.
    other times if theyre in conflict I will get a message about commiting changes.

L49. Deleting & Renaming Branches
    -d of --delete : 
    Ex: switch -c deleteMe to create a new branch
    git branch -d deleteMe : cannot delete branch im currently Viewing
    git switch main : to exit the branch
    git branch -d deleteMe : if this dosent work it may not be merged
    run it again with a uppercase -D

    Rename a branch
    git checkout recentish-music
    
    